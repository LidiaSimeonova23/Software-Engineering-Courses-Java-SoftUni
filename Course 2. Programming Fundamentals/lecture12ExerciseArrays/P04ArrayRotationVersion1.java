package lecture12ExerciseArrays;

import java.util.Scanner;

public class P04ArrayRotationVersion1 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        //в тази задача първият елемент на масив, прочетен от конзолата, трябва да стане последен елемент, а останалите елементи в масива трябва да се изместят с един индекс по-напред
        //дължината на масива си остава същата (по принцип дължината на масив не се променя)

        //например: имаме String масив: ["51", "47", "32", "61", "21"] - ако трябва да направим две завъртания, това означава, че:
        //след първото завъртане масивът ще има следния вид: ["47", "32", "61", "21", "51"]
        //след второто завъртане масивът ще има следния вид: ["32", "61", "21", "51", "47"]

        String[] numbersAsTextsArray = scanner.nextLine().split(" ");     //от първия ред на конзолата четем масив от текстове (реално елементите на масива са числа, но с тях няма да извършваме аритметични операции и/или сравнения, затова можем да си ги разглеждаме като текстове)
        int numberOfRotations = Integer.parseInt(scanner.nextLine());       //от втория ред на конзолата четем едно цяло число (numberOfRotations), което ще ни показва колко ротации/завъртания трябва да се извършат

        //имаме число numberOfRotations /n/ и трябва да извършим numberOfRotations /n/ на брой ротации -> това е типичен for цикъл от 1 до n /numberOfRotations/ включително
        for (int currentRotation = 1; currentRotation <= numberOfRotations; currentRotation++) {    //с този for цикъл броим завъртанията (взимаме текущата ротация) - затова условието е от 1 до n /numberOfRotations/ включително

            //за всяка текуща ротация трябва да разместваме всички елементи на масива - елементите на масив винаги могат да се обходят с for цикъл (понякога може и с foreach цикъл, но в тази задача не може, защото ще са ни нужни индекси, а индекси има само във for цикъл)
            String oldValueOfFirstElement = numbersAsTextsArray[0];       //създаваме си променливата oldValueOfFirstElement, в която да запазим/съхраним старата/началната стойност на първия елемент в масива ->
            //защото след това на този първи елемент ще му присвоим нова стойност /и ако не си съхраним старата стойност, тази стара стойност просто ще спре да съществува; на нас тази стара стойност на първия елемент ще ни трябва - защото накрая ще я присвоим на последния елемент от масива - точно затова трябва да си я запазим/
            //в тази задача с вложения for цикъл ще обходим от първия елемент (който е на индекс 0) до предпоследния елемент (който е на индекс дължината на масива минус 2 включително) - за да можем на текущия елемент да присвоим като стойност следващия елемент
            //нарочно не стигаме до последния елемент (ако вземем и последния, когато той стане текущ, след него няма следващ елемент, чиято стойност да му присвоим - ще има грешка: Index out of bounds exception)
            for (int index = 0; index <= numbersAsTextsArray.length - 2; index++) {    // for (int index = 0; index <= numbersAsTextsArray.length - 2; index++)
                //условието във for цикъла може да е и така:  for (int index = 0; index < numbersAsTextsArray.length - 1; index++)
                numbersAsTextsArray[index] = numbersAsTextsArray[index + 1];    //на всяка итерация на вложения for цикъл нат екущия елемент от масива рисвояваме като стойност следващия елемент от масива (така реално изместваме елементите в масива с един индекс по-напред /по-наляво/)
            }

            //като приключим с всички итерации на вътрешния for цикъл, на последния елемент от масива му присвояваме като стойност старата/началната стойност на първия елемент от масива:
            numbersAsTextsArray[numbersAsTextsArray.length - 1] = oldValueOfFirstElement;
            //и след като сме изпълнили това, вече отиваме на следващата итерация на външния for цикъл (тоест, трябва да извършим следващата поред ротация, ако има такава)
        }


        //накрая, когато вече сме извършили всички ротации (всички итерации на външния for цикъл), трябва да принтираме обновения вид на масива
        //тъй като това е String масив, принтирането може да стане и чрез метода String.join:
        System.out.println(String.join(" ", numbersAsTextsArray));    //всички елементи на масива да са на един ред с интервал между тях
    }
}

package lecture12ExerciseArrays;

import java.util.Arrays;
import java.util.Scanner;

public class P03ZigZagArraysVersion2 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = Integer.parseInt(scanner.nextLine());    //от първия ред на конзолата четем едно цяло число n, което показва броя на редовете (с числа), които ще четем

        //по условие ни е казано да си създадем 2 масива - виждаме (от изходните данни), че броят на елементите във всеки масив е толкова, колкото е броят на редовете с числа, които сме прочели
        //в това решение на задачата ще създадем 2 int масива:
        int[] firstArray = new int[n];    //този новосъздаден целочислен масив има n на брой елемента - всичките елементи са с начална стойност 0 (тя е дефолтна за данни от тип int)
        int[] secondArray = new int[n];   //и този новосъздаден целочислен масив има n на брой елемента - всичките елементи са с начална стойност 0 (тя е дефолтна за данни от тип int)

        //следва да присвоим стойност на всеки елемент от първия масив и на всеки елемент от втория масив чрез for цикъл (стойностите ще ги четем от конзолата)
        //съгласно примерните входни данни виждаме, че ако редът от конзолата е нечетен, първия елемент от този ред го присвояваме като стойност на текущия елемент от първия масив, а втория елемент от този ред го присвояваме като стойност на текущия елемент от втория масив
        //съгласно примерните входни данни виждаме, че ако редът от конзолата е четен, първия елемент от този ред го присвояваме като стойност на текущия елемент от втория масив, а втория елемент от този ред го присвояваме като стойност на текущия елемент от първия масив

        //на всяка итерация на for цикъла ще четем ред от конзолата - този ред е масив от 2 цели числа - едното число ще го присвояваме като стойност на елемент от единия масив, а другото число ще го присвояваме като стойност на елемент от другия масив:
        for (int currentRow = 1; currentRow <= n; currentRow++) {     //с този for цикъл ще обходим редовете от конзолата - затова почваме от 1 (а не от 0) и краят е <= n
            int[] numbersArray = Arrays.stream(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray(); // [1, 5]   //на всяка итерация на цикъла четем масив от 2 цели числа
            //"1 5".split(" ") -> ["1", "5"] -> [1, 5]   //четем цял ред от конзолата като текст, разделяме прочетения текст по интервал и получаваме масив от 2 текста


            // currentRow - 1     -> това е индексът на текущия елемент
            if (currentRow % 2 != 0) {                   //ако редът (с масива) от конзолата е нечетен (1, 3, 5, 7, ...)  ->
                firstArray[currentRow - 1] = numbersArray[0];      //първия елемент (той е на индекс 0) от този ред го присвояваме като стойност на текущия елемент от първия масив
                secondArray[currentRow - 1] = numbersArray[1];       //втория елемент от този ред (той е на индекс 1) го присвояваме като стойност на текущия елемент от втория масив
            } else {            //в противен случай /тоест, ако редът (с масива) от конзолата е четен (2, 4, 6, 8, ...)/ ->
                secondArray[currentRow - 1] = numbersArray[0];    //първия елемент (той е на индекс 0) от този ред го присвояваме като стойност на текущия елемент от втория масив
                firstArray[currentRow - 1] = numbersArray[1];       //втория елемент (той е на индекс 1) от този ред го присвояваме като стойност на текущия елемент от първия масив
            }
        }


        //има 2 универсални начина за принтиране (отпечатване) на елементите на всички видове масиви:
        //1. с for цикъл - по index-ите на елементите
        //2. с foreach - по елементите

        //принтираме елементите на първия масив (с foreach цикъл):
        for (int element : firstArray) {
            System.out.print(element + " ");     //System.out.printf("%d ", element);
        }

        System.out.println();      //сваляме курсора на следващия ред (защото всичките елементи на първия масив са принтирани на един ред, а сега искаме елементите на втория масив да бъдат принтирани на нов/отделен ред)

        //принтираме елементите на втория масив (с foreach цикъл):
        for (int element : secondArray) {
            System.out.print(element + " ");     //System.out.printf("%d ", element);
        }

    }
}

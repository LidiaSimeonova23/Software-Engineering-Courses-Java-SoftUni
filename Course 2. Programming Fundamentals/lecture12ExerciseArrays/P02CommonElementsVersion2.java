package lecture12ExerciseArrays;

import java.util.Scanner;

public class P02CommonElementsVersion2 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        //когато в даден масив има и текстове, и числа (както е в случая), го определяме/четем като String масив ->
        //защото за конзолата всяко нещо е текст (всичко можем да четем като текст и после, ако е нужно, да го превърнем в число или в символ), но текст не можем да четем като число

        //1. от първия ред на конзолата четем масив от текстове
        String[] firstArray = scanner.nextLine().split(" ");   //елементите на масива имат конкретни стойности, прочетени от конзолата

        //2. от втория ред на конзолата четем масив от текстове
        String[] secondArray = scanner.nextLine().split(" ");   //елементите на масива имат конкретни стойности, прочетени от конзолата

        //подсказано ни е в условието на задачата, че трябва да сравняваме елементите от втория масив с елементите от първия масив (това е важно за реда на принтиране на общите елементи)
        //двата масива не са еднакви (просто трябва да видим дали в тях има някои съвпадащи елементи)

        //3. почваме да взимаме всеки един елемент от втория масив и да го сравняваме с всеки един елемент от първия масив (докато открием същия елемент, или докато свършат елементите в първия масив) -> с 2 вложени for цикъла:
        //за да преминем към следваща итерация на външния for цикъл (тоест, за да вземем следващия елемент от втория масив), трябва да сме извършили необходимите итерации на вътрешния for цикъл (или докато срещнем съвпадащ елемент от първия масив, или докато свършат елементите на първия масив)
        //с външния for цикъл взимаме текущия елемент от втория масив, след което с вътрешния for цикъл последователно обхождаме всеки един елемент от първия масив (или докато срещнем съвпадащ елемент от първия масив, или докато свършат елементите на първия масив)
        for (int indexSecondArray = 0; indexSecondArray < secondArray.length; indexSecondArray++) {     //for (int indexSecondArray = 0; indexSecondArray <= secondArray.length - 1; indexSecondArray++)    //вместо променливата indexSecondArray можем да ползваме i
            for (int indexFirstArray = 0; indexFirstArray < firstArray.length; indexFirstArray++) {      //for (int indexFirstArray = 0; indexFirstArray <= firstArray.length - 1; indexFirstArray++)      //вместо променливата indexFirstArray можем да ползваме j
                if (secondArray[indexSecondArray].equals(firstArray[indexFirstArray])) {     //ако текущият елемент от втория масив съвпада с текущия елемент от първия масив
                    System.out.print(secondArray[indexSecondArray] + " ");    //System.out.printf("%s ", secondArray[indexSecondArray]);    //да се принтира съвпадащият елемент    //всички съвпадащи елементи да се принтират на един ред с интервал между тях
                    //може и така:  System.out.print(firstArray[indexFirstArray] + " ");    //System.out.printf("%s ", firstArray[indexFirstArray]);
                    break;    //прекъсваме вътрешния for цикъл (след като сме принтирали съвпадащия елемент), за да се прекрати обхождането на първия масив (тоест, за даден елемент от втория масив сме открили съвпадащ елемент от първия масив, няма смисъл да правим други излишни итерации на първия масив)
                }
            }
        }

    }
}

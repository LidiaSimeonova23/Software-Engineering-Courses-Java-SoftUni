package lecture40PreviousExamsPreparationForMidExam;

import java.util.Scanner;

public class P01GuineaPig {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        //Всеки месец Мери купува храна за морското си свинче
        double availableFoodInKgs = Double.parseDouble(scanner.nextLine());       //купено количество храна (в килограми) за 1 месец (30 дни) - a floating-point number in the range [0.0 – 10000.0]
        double availableHayInKgs = Double.parseDouble(scanner.nextLine());       //купено количество сено (в килограми) за 1 месец (30 дни) - a floating-point number in the range [0.0 – 10000.0]
        double availableCoverInKgs = Double.parseDouble(scanner.nextLine());       //купено количество покривка (в килограми) за 1 месец (30 дни) - a floating-point number in the range [0.0 – 10000.0]
        double weightOfGuineaInKgs = Double.parseDouble(scanner.nextLine());       //теглото на морското свинче в килограми - a floating-point number in the range [0.0 – 10000.0]

        //Целта на задачата е да изчислим дали храната, сеното и покривката, купени от Мери за нейното морско свинче, ще му стигнат за месеца (30 дни).
        //Ако някое от трите (или храната, или сеното, или покривката) свърши, Мери трябва да отиде до магазина, за да купи още; програмата приключва.

        //имаме действие, което ще се повтаря многократно (всеки ден Мери ще храни морското си свинче) -> знаем колко ще са повторенията (колкото са дните в месеца) -> ще ползваме for цикъл
        for (int currentDayOfMonth = 1; currentDayOfMonth <= 30; currentDayOfMonth++) {

            //ТРЯБВА ДА РАБОТИМ В ЕДНА И СЪЩА МЕРНА ЕДИНИЦА - В СЛУЧАЯ В КИЛОГРАМИ, ЗАЩОТО ИЗХОДНИТЕ ДАННИ СА В КИЛОГРАМИ   (1 КГ = 1000 Г)!

            //първото действие е храненето на свинчето
            //всеки ден морското свинче яде по 300 г храна (300 грама трябва да разделим на 1000, за да видим колко килограма е това)
            if (availableFoodInKgs >= 300 * 1.0 / 1000) {    //ако има достатъчно храна (тоест, ако наличната към момента храна е по-голяма или равна на необходимата), морското свинче ще бъде нахранено
                availableFoodInKgs -= 300 * 1.0 / 1000;        //availableFoodInKgs = availableFoodInKgs - (300 * 1.0 / 1000);    //всеки път, когато морското свинче е нахранено, количеството храна намалява с текущо изяденото количество храна
            } else {     //else if (availableFoodInKgs < 300 * 1.0 / 1000)     //в противен случай (ако наличната към момента храна е по-малко от необходимата), свинчето няма да яде; Мери трябва да купи още храна
                System.out.println("Merry must go to the pet store!");
                return;      //прекъсваме цялата програма (и повече няма да се изпълни нито един ред код - нито вътре в цикъла, нито извън него)
            }

            //всеки втори ден, след като Мери вече е нахранила свинчето, му слага сено - необходимото количество сено за деня е равно на 5% от останалата (наличната към момента) храна
            if (currentDayOfMonth % 2 == 0) {     //ако денят е втори поред (ако денят модулно се дели на 2 с остатък 0 /тоест, без остатък/, значи денят е втори поред   - тоест, втори, четвърти, шести, осми ...)
                if (availableHayInKgs >= availableFoodInKgs * 5 / 100) {      //и ако има достатъчно сено (тоест, наличното сено е по-голямо или равно на необходимото), морското свинче ще получи сено
                    availableHayInKgs -= availableFoodInKgs * 5 / 100;     //availableHayInKgs = availableHayInKgs - (availableFoodInKgs * 5 / 100);      //всеки път, когато морското свинче получи сено, количеството сено намалява с текущо полученото количество сено
                } else {   //else if (availableHayInKgs < availableFoodInKgs * 5 / 100)         //в противен случай (ако наличното към момента сено е по-малко от необходимото), свинчето няма да получи сено; Мери трябва да купи още сено
                    System.out.println("Merry must go to the pet store!");
                    return;      //прекъсваме цялата програма (и повече няма да се изпълни нито един ред код - нито вътре в цикъла, нито извън него)
                }
            }

            //всеки трети ден Мери слага на морското свинче покривка - необходимото количество покривка за деня е равно на 1/3 от теглото на свинчето
            if (currentDayOfMonth % 3 == 0) {      //ако денят е трети поред (ако денят модулно се дели на 3 с остатък 0 /тоест, без остатък/, значи денят е трети поред   - тоест, трети, шести, девети ...)
                if (availableCoverInKgs >= weightOfGuineaInKgs * 1 / 3) {      //и ако има достатъчно покривка (тоест, наличната покривка е по-голяма или равна на необходимата), морското свинче ще получи покривка
                    availableCoverInKgs -= weightOfGuineaInKgs * 1 / 3;      //availableCoverInKgs = availableCoverInKgs - (weightOfGuineaInKgs * 1 / 3);        //всеки път, когато морското свинче получи покривка, количеството покривка намалява с текущо полученото количество покривка
                } else {     //else if (availableCoverInKgs < weightOfGuineaInKgs * 1 / 3)       //в противен случай (ако наличната към момента покривка е по-малко от необходимата), свинчето няма да получи покривка; Мери трябва да купи още покривка
                    System.out.println("Merry must go to the pet store!");
                    return;      //прекъсваме цялата програма (и повече няма да се изпълни нито един ред код - нито вътре в цикъла, нито извън него)
                }
            }

        }


        //ако не сме попаднали в нито един случай, че нещо (храната или сеното, или покривката) е свършило (и съответно не сме прекъснали цялата програма), значи всичко е стигнало; принтираме от кое колко е останало, след като са изминали всички 30 дни
        System.out.printf("Everything is fine! Puppy is happy! Food: %.2f, Hay: %.2f, Cover: %.2f.", availableFoodInKgs, availableHayInKgs, availableCoverInKgs);
    }
}

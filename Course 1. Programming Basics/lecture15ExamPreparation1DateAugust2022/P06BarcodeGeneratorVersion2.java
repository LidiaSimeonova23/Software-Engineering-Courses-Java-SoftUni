package lecture15ExamPreparation1DateAugust2022;

import java.util.Scanner;

public class P06BarcodeGeneratorVersion2 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        //От конзолата веднъж ще прочетем две цели четирицифрени числа, които показват обхвата на баркодовете, които трябва да променим:
        //•	Първи ред – четирицифрено число – началото на обхвата. Цяло число в интервала [1000…9999]
        //•	Втори ред – четирицифрено число – края на обхвата. Цяло число в интервала [1000…9999]

        int startNumber = Integer.parseInt(scanner.nextLine());   //началото на диапазона
        int endNumber = Integer.parseInt(scanner.nextLine());   //краят на диапазона

        //ще трябва да принтираме тези четирицифрени числа, които са между първото и второто, и които не съдържат четни цифри в себе си
        //имаме повторения, имаме начало, имаме и край, следователно ще знаем колко ще са итерациите на цикъла - значи ще е for-цикъл

        int startUnits = startNumber % 10;   //намираме (взимаме) последната цифра (единицата) на първото число - с модулно деление на 10   - четвъртата цифра на първото четирицифрено число
        int startTens = startNumber / 10 % 10;   //с целочислено деление на 10 махаме последната цифра от числото (и то става трицифрено), а с модулно деление на 10 взимаме последната цифра на това трицифрено число - а тя се пада десетицата на четирицифреното число - третата цифра на първото четирицифрено число
        int startHundreds = startNumber / 100 % 10;    //с целочислено деление на 100 махаме последните 2 цифри от числото (и то става двуцифрено), а с модулно деление на 10 взимаме последната цифра на това двуцифрено число - а тя се пада стотицата на четирицифреното число - втората цифра на първото четирицифрено число
        int startThousands = startNumber / 1000 % 10;  //с целочислено деление на 1000 махаме последните 3 цифри от числото (и то става едноцифрено), а с модулно деление на 10 взимаме единствената цифра на това едноцифрено число - а тя се пада хилядната на четирицифреното число - първата цифра на първото четирицифрено число

        int endUnits = endNumber % 10;   //намираме (взимаме) последната цифра (единицата) на първото число - с модулно деление на 10 - четвъртата цифра на второто четирицифрено число
        int endTens = endNumber / 10 % 10;   //с целочислено деление на 10 махаме последната цифра от числото (и то става трицифрено), а с модулно деление на 10 взимаме последната цифра на това трицифрено число - а тя се пада десетицата на четирицифреното число - третата цифра на второто четирицифрено число
        int endHundreds = endNumber / 100 % 10;    //с целочислено деление на 100 махаме последните 2 цифри от числото (и то става двуцифрено), а с модулно деление на 10 взимаме последната цифра на това двуцифрено число - а тя се пада стотицата на четирицифреното число - втората цифра на второто четирицифрено число
        int endThousands = endNumber / 1000 % 10;  //с целочислено деление на 1000 махаме последните 3 цифри от числото (и то става едноцифрено), а с модулно деление на 10 взимаме единствената цифра на това едноцифрено число - а тя се пада хилядната на четирицифреното число  - първата цифра на второто четирицифрено число

        for (int i = startThousands; i <= endThousands; i++) {       //за най-външния цикъл начало е първата цифра на първото число, край е първата цифра на второто число
            for (int j = startHundreds; j <= endHundreds; j++) {       //за този вложен цикъл начало е второта цифра на първото число, край е втората цифра на второто число
                for (int k = startTens; k <= endTens; k++) {             //за този вложен цикъл начало е третата цифра на първото число, край е третата цифра на второто число
                    for (int l = startUnits; l <= endUnits; l++) {         //за най-вътрешния вложен цикъл начало е четвъртата цифра на първото число, край е четвъртата цифра на второто число

                        if ((i % 2 == 1) && (j % 2 == 1) && (k % 2 == 1) && (l % 2 == 1)) {        //правим проверка - ако всяка от четирите цифри на полученото четирицифрено число е нечетна цифра, то нека да се принтира това четирицифрено число
                            System.out.printf("%d%d%d%d ", i, j, k, l);     //за int променлива шаблонът е %d, накрая оставяме празно място, за да има разстояние между числата (да не са залепени едно за друго)
                        }

                    }
                }
            }
        }


    }
}


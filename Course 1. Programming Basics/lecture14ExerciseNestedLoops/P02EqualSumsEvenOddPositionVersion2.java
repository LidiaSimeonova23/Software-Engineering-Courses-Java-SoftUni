package lecture14ExerciseNestedLoops;

import java.util.Scanner;

public class P02EqualSumsEvenOddPositionVersion2 {
    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

        //веднъж четем от конзолата две шестцифрени цели числа в диапазона от 100000 до 300000; винаги първото въведено число ще бъде по-малко от второто
        int startNumber = Integer.parseInt(scanner.nextLine());
        int endNumber = Integer.parseInt(scanner.nextLine());

        //На конзолата да се отпечатат на 1 ред разделени с интервал всички числа, които се намират между двете, прочетени от конзолата числа, и отговарят на следното условие:
        //сумата от цифрите на четни и нечетни позиции да са равни. Ако няма числа, отговарящи на условието на конзолата не се извежда резултат.
        //Тоест, няма да принтираме всички числа от startNumber до endNumber, а само тези, които отговарят на условието

        //във външния цикъл взимаме текущото число, а във вътрешния цикъл проверяваме всяка една от шестте цифри на текущото число и намираме сумата от цифрите на четните позиции и сумата от цифрите на нечетните позиции
        for (int i = startNumber; i <= endNumber; i++) {            //принтирането ще се повтаря, знаем колко са итерациите - от startNumber до endNumber - > for-loop
            String currentNumber = "" + i;            //създаваме си променлива за текущото число (този път разглеждаме числото като текст - String)
            //"" + i   - чрез конкатенация на празен String и число получаваме String от числото (тоест, превръщаме числото от тип int в тип String)

            int evenSum = 0;     //създаваме си променлива за четната сума с начална стойност 0
            int oddSum = 0;      //създаваме си променлива за нечетната сума с начална стойност 0
            for (int index = 0; index < currentNumber.length(); index++) {             //след като разглеждаме числото като текст, ще обходим всяка една цифра от това число (тоест, всеки символ от текста), първият символ е на индекс 0, последният символ е на индекс дължината на текста - 1; инкрементация - увеличаване стойността на променливата с единица
                //  for (int index = 0; index <= currentNumber.length() - 1; index++)    - > така също може да се напише
                int digit = Integer.parseInt("" + currentNumber.charAt(index));           //на всяка цифра от числото приравняваме стойност празен стринг + символа на съответната позиция
                             //превръщаме текущия символ (текущата цифра) в число, защото ще трябва да извършваме аритметични операции с него (а ако е текст, не можем да извършваме аритм. операции)

                if (index % 2 == 0) {        //ако позицията е четна (а тя е четна, ако модулно се дели на 2 с остатък 0)
                    evenSum += digit;            //evenSum = evenSum + digit;    -> четната сума е равна на четната сума до момента + текущата цифра
                } else {                 //ако позицията е нечетна
                    oddSum += digit;             //oddSum = oddSum + digit;      -> нечетната сума е равна на нечетната сума до момента + текущата цифра
                }
            }

            if (evenSum == oddSum) {            //за текущото число проверяваме - ако сумата от цифрите на четните позиции е равна на сумата от цифрите на нечетните позиции
                System.out.print(i + " ");             //да се принтират числата, които отговарят на това условие, на един ред с празно разстояние между тях
                //System.out.printf("%d ", i);
            }

        }


    }
}

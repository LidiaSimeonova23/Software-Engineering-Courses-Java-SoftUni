package lecture9ExerciseDataTypesAndVariables;

import java.util.Scanner;

public class PMoreExercises01DataTypeFinder {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        //•	Boolean -> true/TRUE/True или false/FALSE/False
        //•	Characters -> дължина 1 и съответна целочислена стойност (ASCII код) < 48 || целочислена стойност (ASCII код) > 57
        //•	Integer   -> едноцифрено или многоцифрено цяло число
        //•	Floating point -> число, което съдържа символа точка ->  '.'
        //•	Strings -> последователност от символи


        String input = scanner.nextLine();      //в началото си определяме входните данни като текст, тъй като още не знаем от какъв тип са (винаги могат да бъдат разглеждани като текст, конзолата разбира само от текст)
        while (!input.equals("END")) {     //докато входните данни са различни от "END", ще четем входни данни и ще проверяваме от какъв тип са

            //ще правим проверки за типа входни данни -> за всички проверки ще искаме да ползваме една променлива -> за да можем да я ползваме във всичките проверки и извън тях (в цикъла), трябва да я създадем в цикъла, но над проверките (живот на променлива)
            String type = "";      //предварит. не знаем какъв тип ще са данните, които четем, но за конзолата всичко е текст
            //възможностите за type са: "integer"/"floating point"/"boolean"/"character"/"string" (в случая в изходните данни string е изписан с малка буква, а не с главна) затова определяме типа като String
            if (input.equalsIgnoreCase("true") || input.equalsIgnoreCase("false")) {    //ако входните данни съвпадат с true (без значение дали думата е изписана с малки или с главни букви) или false (без значение дали думата е изписана с малки или с главни букви), значи са от тип boolean
                type = "boolean";
            } else if (input.length() == 1) {    //или ако входните данни (прочетеният от конзолата текст) имат дължина 1 (само от 1 символ)
                //ако дължината на прочетения текст е 1, то това може да бъде или символ, или едноцифрено цяло число в диапазона от 0 до 9 включително
                char symbol = input.charAt(0);      //превръщаме прочетения текст в символ (като вземем символа от текста, който е на индекс 0 в текста)
                if (symbol <= 47 || symbol >= 58) {    //if (!Character.isDigit(symbol))  //ако този символ има целочислена стойност (ASCII код) до 47 включително или стойност поне 58, то този символ е от тип character
                    type = "character";
                } else {      //if (Character.isDigit(symbol))    //в противен случай (тоест, ако целочислената стойност на символа е над 47 и в същото време е под 58), значи тази променлива е от тип integer (едноцифрено цяло число в диапазона от 0 до 9 включително)
                    type = "integer";
                }
            } else {     //във всички останали случаи прочетените входни данни са или String, или floating point, или integer (което има повече от една цифри)  - и проверяваме кое от трите е, като итерираме по всеки един от символите в прочетените входни данни (прочетения текст):
                boolean isString = false;          //създаваме си булева променлива, с която заявяваме, че по подразбиране прочетените входни данни не са String
                boolean isFloatingPointNumber = false;       //създаваме си булева променлива, с която заявяваме, че по подразбиране прочетените входни данни не са floating point
                for (int index = 0; index < input.length(); index++) {       //for (int index = 0; index <= input.length() - 1; index++)       //итерираме по всеки един от символите в прочетения текст
                    char currentSymbol = input.charAt(index);    //създаваме си променлива за текущия символ

                    //ако текущият символ отговаря на написаното условие, значи е различен от точка и е различен от числата от 0 до 1 включително, което означава, че прочетените входни данни на текущата итерация на цикъла не са нито floating point, нито integer, следователно са от тип String
                    if (currentSymbol < 45 || currentSymbol == 47 || currentSymbol >= 58) {    //currentSymbol < 45    -> не включваме 45, защото 45 е кодът на '-' (минус пред число е отрицателно число, а не текст)
                        isString = true;
                    }

                    //ако текущият символ има целочислена стойност (ASCII код) 46, то този текущ символ е '.' (точка) -> следователно, прочетените входни данни на текущата итерация на цикъла са дробно число
                    if (currentSymbol == 46) {      //if (currentSymbol == '.')
                        isFloatingPointNumber = true;
                    }
                }


                if (isString) {        //ако isString е истина, то прочетените входни данни на текущата итерация на цикъла са String
                    type = "string";
                } else {       //в противен случай (когато прочетените входни данни не са String) прочетените входни данни са число - то може да е два вида:
                    if (isFloatingPointNumber) {          //ако isFloatingPointNumber е истина, числото е floating point (дробно)
                        type = "floating point";
                    } else {     //в противен случай (тоест, ако числото не е дробно) числото е цяло
                        type = "integer";
                    }

                }
            }


            System.out.printf("%s is %s type%n", input, type);   //на всяка итерация на цикъла принтираме от какъв тип са текущо прочетените входни данни

            input = scanner.nextLine();     //update на входните данни (в противен случай на всяка итерация на цикъла скенерът ще чете само първия ред с входни данни, условието винаги ще е вярно и ще имаме безкраен цикъл)
        }


    }
}
